{"version":3,"sources":["components/Todo.js","actions/index.js","App.js","reducers/todoReducers.js","reducers/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","todoReducers","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","elem","title","App","initialData","action","newList","filter","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAoDeA,EA/CF,WAEX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAOC,aAAY,SAACC,GAAD,OAAUA,EAAMC,aAAaH,QAChDI,EAAWC,cAGf,OACI,qBAAKC,UAAU,WAAf,SACF,sBAAKA,UAAU,YAAf,UACE,iCACA,8DAKA,sBAAKA,UAAU,WAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,oBAAeC,MAAOX,EAAWY,SAAU,SAACC,GAAD,OAAWZ,EAAaY,EAAMC,OAAOH,UAC/G,mBAAGH,UAAU,qBAAqBO,QAAS,kBAAKT,GCvBlCU,EDuBmDhB,ECtBjE,CACFS,KAAM,WACNQ,QAAS,CACLC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAMA,KDkBqEf,EAAa,KCvB7E,IAACe,QD0BhB,qBAAKR,UAAU,YAAf,SAEEN,EAAKoB,KAAI,SAACC,GACR,OACE,sBAAKf,UAAU,WAAf,UACF,6BAAKe,EAAKP,OACV,qBAAKR,UAAU,WAAf,SACE,mBAAGA,UAAU,2BAA2BgB,MAAM,cAAcT,QAAS,kBAAMT,ECtB/E,CACFG,KAAM,cACNS,GDoBqGK,EAAKL,YAHrEK,EAAKL,SAYxC,qBAAKV,UAAU,YAAf,SACE,yBAAQA,UAAU,eAAe,oBAAkB,aAAaO,QAAS,kBAAMT,ECzBjF,CACFG,KAAM,iBDwBF,cAAwG,yDEjCrGgB,MARf,WACE,OACE,mCACE,cAAC,EAAD,O,sBCLAC,EAAc,CAChBxB,KAAO,IAmCIG,EAhCM,WAAkC,IAAjCD,EAAgC,uDAAxBsB,EAAcC,EAAU,uCAClD,OAAOA,EAAOlB,MAEV,IAAK,WACD,MAAmBkB,EAAOV,QAAnBC,EAAP,EAAOA,GAAIF,EAAX,EAAWA,KACX,kCACOZ,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACIgB,GAAIA,EACJF,KAAMA,OAKlB,IAAK,cACD,IAAMY,EAASxB,EAAMF,KAAK2B,QAAO,SAACN,GAAD,OAASA,EAAKL,KAAOS,EAAOT,MACjE,kCACOd,GADP,IAEIF,KAAM0B,IAGV,IAAK,cACL,MAAM,CACF1B,KAAM,IAGV,QAAS,OAAOE,ICzBb0B,EAJMC,YAAgB,CACjC1B,iBCAW2B,EAFDC,YAAYH,EAAcI,OAAOC,8BAAgCD,OAAOC,gCCKtFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.5308aca2.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport{ addTodo, deleteTodo, removeTodo } from '../actions/index';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './todo.css';\r\nconst Todo = () => {\r\n\r\n  const [inputData, setInputData] = useState('');\r\n\r\n  const list = useSelector((state) =>state.todoReducers.list)\r\n  const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <div className=\"main-div\">\r\n      <div className=\"child-div\">\r\n        <figure>\r\n        <figcaption>\r\n          Add Your List Here \r\n        </figcaption>\r\n        </figure>\r\n\r\n        <div className=\"addItems\">\r\n          <input type=\"text\" placeholder=\"✍ Add Items \" value={inputData} onChange={(event) => setInputData(event.target.value)} />\r\n          <i className=\"fa fa-plus add-btn\" onClick={() =>dispatch(addTodo(inputData), setInputData('')) }></i>\r\n        </div>\r\n\r\n        <div className=\"showItems\">    \r\n        {\r\n          list.map((elem) =>{\r\n            return(\r\n              <div className=\"eachItem\" key={elem.id}>\r\n            <h3>{elem.data}</h3>\r\n            <div className=\"todo-btn\">\r\n              <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => dispatch(deleteTodo(elem.id))}></i>\r\n            </div>\r\n          </div> \r\n            )          \r\n          })\r\n        } \r\n                       \r\n        </div>\r\n\r\n          <div className=\"showItems\">\r\n            <button className=\"btn effect04\" data-sm-link-text=\"remove all\" onClick={() => dispatch(removeTodo())}> <span>Check List</span></button>\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","\r\nexport const addTodo = (data) =>{\r\n    return{\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            id: new Date().getTime().toString(),\r\n            data: data\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) =>{\r\n    return{\r\n        type: \"DELETE_TODO\",\r\n        id\r\n    }\r\n}\r\n\r\nexport const removeTodo = () =>{\r\n    return{\r\n        type: \"REMOVE_TODO\"\r\n    }\r\n}","\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","\r\nconst initialData = {\r\n    list : []\r\n}\r\n\r\nconst todoReducers = (state = initialData , action) =>{\r\n    switch(action.type){\r\n\r\n        case \"ADD_TODO\" :\r\n            const {id, data} = action.payload;\r\n            return{\r\n                ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    {\r\n                        id: id,\r\n                        data: data\r\n                }\r\n            ]\r\n            }\r\n\r\n            case \"DELETE_TODO\" :\r\n                const newList= state.list.filter((elem) =>elem.id !== action.id)\r\n            return{\r\n                ...state,\r\n                list: newList\r\n            }\r\n\r\n            case \"REMOVE_TODO\" :\r\n            return{\r\n                list: []\r\n            }\r\n\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport default todoReducers;","\r\nimport { combineReducers } from \"redux\";\r\nimport todoReducers from \"./todoReducers\";\r\n\r\nconst rootReducers = combineReducers({\r\n    todoReducers\r\n})\r\n\r\nexport default rootReducers;","import { createStore } from \"redux\";\r\nimport rootReducers from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}